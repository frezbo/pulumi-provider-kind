// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kind

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The provider type for the kind package.
type Provider struct {
	pulumi.ProviderResourceState
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:kind", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// Kind config file to use. Optional
	ConfigFile *string `pulumi:"configFile"`
	// File to save generated kubeconfig. Default: not set. Optional
	KubeconfigFile *string `pulumi:"kubeconfigFile"`
	// Node image to use. Optional
	NodeImage *string `pulumi:"nodeImage"`
	// Provider to use. Supports docker/podman. Default: docker. Optional
	Provider *string `pulumi:"provider"`
	// Whether to retain the nodes when creation fails. Needs manual cleanup when set to true Default: false. Optional
	RetainNodesOnFailure *bool `pulumi:"retainNodesOnFailure"`
	// Stop before running kubeadm commands. This would need the user to manually retrieve the Kubeconfig. Default: false. Optional
	StopBeforeSettingK8s *bool `pulumi:"stopBeforeSettingK8s"`
	// Time in seconds to wait for nodes to become ready. Default: none. Optional
	WaitForNodeReady *int `pulumi:"waitForNodeReady"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// Kind config file to use. Optional
	ConfigFile pulumi.StringPtrInput
	// File to save generated kubeconfig. Default: not set. Optional
	KubeconfigFile pulumi.StringPtrInput
	// Node image to use. Optional
	NodeImage pulumi.StringPtrInput
	// Provider to use. Supports docker/podman. Default: docker. Optional
	Provider pulumi.StringPtrInput
	// Whether to retain the nodes when creation fails. Needs manual cleanup when set to true Default: false. Optional
	RetainNodesOnFailure pulumi.BoolPtrInput
	// Stop before running kubeadm commands. This would need the user to manually retrieve the Kubeconfig. Default: false. Optional
	StopBeforeSettingK8s pulumi.BoolPtrInput
	// Time in seconds to wait for nodes to become ready. Default: none. Optional
	WaitForNodeReady pulumi.IntPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((*Provider)(nil))
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

func (i *Provider) ToProviderPtrOutput() ProviderPtrOutput {
	return i.ToProviderPtrOutputWithContext(context.Background())
}

func (i *Provider) ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderPtrOutput)
}

type ProviderPtrInput interface {
	pulumi.Input

	ToProviderPtrOutput() ProviderPtrOutput
	ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput
}

type providerPtrType ProviderArgs

func (*providerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil))
}

func (i *providerPtrType) ToProviderPtrOutput() ProviderPtrOutput {
	return i.ToProviderPtrOutputWithContext(context.Background())
}

func (i *providerPtrType) ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderPtrOutput)
}

type ProviderOutput struct {
	*pulumi.OutputState
}

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Provider)(nil))
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderPtrOutput() ProviderPtrOutput {
	return o.ToProviderPtrOutputWithContext(context.Background())
}

func (o ProviderOutput) ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput {
	return o.ApplyT(func(v Provider) *Provider {
		return &v
	}).(ProviderPtrOutput)
}

type ProviderPtrOutput struct {
	*pulumi.OutputState
}

func (ProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil))
}

func (o ProviderPtrOutput) ToProviderPtrOutput() ProviderPtrOutput {
	return o
}

func (o ProviderPtrOutput) ToProviderPtrOutputWithContext(ctx context.Context) ProviderPtrOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ProviderOutput{})
	pulumi.RegisterOutputType(ProviderPtrOutput{})
}
